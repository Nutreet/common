// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: nutrition/service.proto

package nutrition

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	NutritionService_CreateItem_FullMethodName = "/gen.nutrition.NutritionService/CreateItem"
)

// NutritionServiceClient is the client API for NutritionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NutritionServiceClient interface {
	CreateItem(ctx context.Context, in *CreateItemRequest, opts ...grpc.CallOption) (*CreateItemResponse, error)
}

type nutritionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNutritionServiceClient(cc grpc.ClientConnInterface) NutritionServiceClient {
	return &nutritionServiceClient{cc}
}

func (c *nutritionServiceClient) CreateItem(ctx context.Context, in *CreateItemRequest, opts ...grpc.CallOption) (*CreateItemResponse, error) {
	out := new(CreateItemResponse)
	err := c.cc.Invoke(ctx, NutritionService_CreateItem_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NutritionServiceServer is the server API for NutritionService service.
// All implementations must embed UnimplementedNutritionServiceServer
// for forward compatibility
type NutritionServiceServer interface {
	CreateItem(context.Context, *CreateItemRequest) (*CreateItemResponse, error)
	mustEmbedUnimplementedNutritionServiceServer()
}

// UnimplementedNutritionServiceServer must be embedded to have forward compatible implementations.
type UnimplementedNutritionServiceServer struct {
}

func (UnimplementedNutritionServiceServer) CreateItem(context.Context, *CreateItemRequest) (*CreateItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateItem not implemented")
}
func (UnimplementedNutritionServiceServer) mustEmbedUnimplementedNutritionServiceServer() {}

// UnsafeNutritionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NutritionServiceServer will
// result in compilation errors.
type UnsafeNutritionServiceServer interface {
	mustEmbedUnimplementedNutritionServiceServer()
}

func RegisterNutritionServiceServer(s grpc.ServiceRegistrar, srv NutritionServiceServer) {
	s.RegisterService(&NutritionService_ServiceDesc, srv)
}

func _NutritionService_CreateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionServiceServer).CreateItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: NutritionService_CreateItem_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionServiceServer).CreateItem(ctx, req.(*CreateItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// NutritionService_ServiceDesc is the grpc.ServiceDesc for NutritionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NutritionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "gen.nutrition.NutritionService",
	HandlerType: (*NutritionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateItem",
			Handler:    _NutritionService_CreateItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nutrition/service.proto",
}
